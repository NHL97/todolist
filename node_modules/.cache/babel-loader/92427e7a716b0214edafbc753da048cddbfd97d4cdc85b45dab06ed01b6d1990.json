{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\striv\\\\Desktop\\\\todolist\\\\src\\\\Header.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  // Fetch current time and date\n  function getCurrentTimeAndDate() {\n    const currentDate = new Date();\n    const currentTime = currentDate.toLocaleTimeString();\n    const currentDay = currentDate.toLocaleDateString();\n    document.getElementById(\"current-time\").textContent = currentTime;\n    document.getElementById(\"current-date\").textContent = currentDay;\n  }\n\n  // Fetch current weather\n  function getCurrentWeather() {\n    const apiKey = \"3e5375e4e6b0bcf722cee713718c51b9\";\n    const city = \"Cyberjaya\";\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`;\n    fetch(apiUrl).then(response => response.json()).then(data => {\n      const weatherDescription = data.weather[0].description;\n      const temperature = Math.round(data.main.temp - 273.15); // Convert Kelvin to Celsius\n\n      document.getElementById(\"current-weather\").textContent = `${weatherDescription}, ${temperature}°C`;\n    }).catch(error => {\n      console.error(\"Error fetching weather data:\", error);\n    });\n  }\n\n  // Update time and date every second\n  setInterval(getCurrentTimeAndDate, 1000);\n\n  // Fetch current weather once\n  getCurrentWeather();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"time-date\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"current-time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"current-date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"current-weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Header","getCurrentTimeAndDate","currentDate","Date","currentTime","toLocaleTimeString","currentDay","toLocaleDateString","document","getElementById","textContent","getCurrentWeather","apiKey","city","apiUrl","fetch","then","response","json","data","weatherDescription","weather","description","temperature","Math","round","main","temp","catch","error","console","setInterval","className","children","class","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/striv/Desktop/todolist/src/Header.js"],"sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    // Fetch current time and date\r\nfunction getCurrentTimeAndDate() {\r\n    const currentDate = new Date();\r\n    const currentTime = currentDate.toLocaleTimeString();\r\n    const currentDay = currentDate.toLocaleDateString();\r\n  \r\n    document.getElementById(\"current-time\").textContent = currentTime;\r\n    document.getElementById(\"current-date\").textContent = currentDay;\r\n  }\r\n  \r\n  // Fetch current weather\r\n  function getCurrentWeather() {\r\n    const apiKey = \"3e5375e4e6b0bcf722cee713718c51b9\";\r\n    const city = \"Cyberjaya\";\r\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`;\r\n  \r\n    fetch(apiUrl)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const weatherDescription = data.weather[0].description;\r\n        const temperature = Math.round(data.main.temp - 273.15); // Convert Kelvin to Celsius\r\n  \r\n        document.getElementById(\"current-weather\").textContent = `${weatherDescription}, ${temperature}°C`;\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching weather data:\", error);\r\n      });\r\n  }\r\n  \r\n  // Update time and date every second\r\n  setInterval(getCurrentTimeAndDate, 1000);\r\n  \r\n  // Fetch current weather once\r\n  getCurrentWeather();\r\n  return (\r\n    <div className=\"top-panel\">\r\n        <div class=\"time-date\">\r\n          <span id=\"current-time\"></span>\r\n          <span id=\"current-date\"></span>\r\n        </div>\r\n        <div className=\"weather\">\r\n          <span id=\"current-weather\"></span>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Header"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,MAAMA,CAAA,EAAG;EACd;EACJ,SAASC,qBAAqBA,CAAA,EAAG;IAC7B,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC9B,MAAMC,WAAW,GAAGF,WAAW,CAACG,kBAAkB,CAAC,CAAC;IACpD,MAAMC,UAAU,GAAGJ,WAAW,CAACK,kBAAkB,CAAC,CAAC;IAEnDC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACC,WAAW,GAAGN,WAAW;IACjEI,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACC,WAAW,GAAGJ,UAAU;EAClE;;EAEA;EACA,SAASK,iBAAiBA,CAAA,EAAG;IAC3B,MAAMC,MAAM,GAAG,kCAAkC;IACjD,MAAMC,IAAI,GAAG,WAAW;IACxB,MAAMC,MAAM,GAAG,qDAAqDD,IAAI,UAAUD,MAAM,EAAE;IAE1FG,KAAK,CAACD,MAAM,CAAC,CACVE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,MAAMC,kBAAkB,GAAGD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW;MACtD,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACN,IAAI,CAACO,IAAI,CAACC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC;;MAEzDnB,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,CAACC,WAAW,GAAG,GAAGU,kBAAkB,KAAKG,WAAW,IAAI;IACpG,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN;;EAEA;EACAE,WAAW,CAAC9B,qBAAqB,EAAE,IAAI,CAAC;;EAExC;EACAU,iBAAiB,CAAC,CAAC;EACnB,oBACEZ,OAAA;IAAKiC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBlC,OAAA;MAAKmC,KAAK,EAAC,WAAW;MAAAD,QAAA,gBACpBlC,OAAA;QAAMoC,EAAE,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/BxC,OAAA;QAAMoC,EAAE,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACNxC,OAAA;MAAKiC,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBlC,OAAA;QAAMoC,EAAE,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACC,EAAA,GA9CQxC,MAAM;AAgDf,eAAeA,MAAM;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}